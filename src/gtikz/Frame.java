/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gtikz;

import java.util.ArrayList;
import java.util.StringTokenizer;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;

/**
 *
 * @author jgd
 */

public class Frame extends javax.swing.JFrame {
    
    double height, width;
    double ymax, ymin;
    double xmax, xmin;
    String[] LX;
    Double[] LY;
    Double[] A1TTT,A2TTT,A3TTT,A4TTT,A5TTT,A6TTT;
    int N1,N2,N3,N4,N5,N6;

    /**
     * Creates new form Frame
     */
    public Frame() {
        initComponents();
        ms1.setSelectedItem("1");
        ms2.setSelectedItem("1");
        ms3.setSelectedItem("1");
        ms4.setSelectedItem("1");
        ms5.setSelectedItem("1");
        ms6.setSelectedItem("1");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        aaa = new javax.swing.JLabel();
        ListA1 = new javax.swing.JTextField();
        ListA2 = new javax.swing.JTextField();
        sss = new javax.swing.JLabel();
        ListA3 = new javax.swing.JTextField();
        ddf = new javax.swing.JLabel();
        ListA4 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        adf = new javax.swing.JLabel();
        ListA5 = new javax.swing.JTextField();
        jCheckBox6 = new javax.swing.JCheckBox();
        fdff = new javax.swing.JLabel();
        ListA6 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        ms1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        ms2 = new javax.swing.JComboBox();
        ms3 = new javax.swing.JComboBox();
        ms4 = new javax.swing.JComboBox();
        ms5 = new javax.swing.JComboBox();
        ms6 = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        m1 = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        m2 = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        m3 = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        m4 = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        m5 = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        m6 = new javax.swing.JComboBox();
        RunButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        SizeX = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        SizeY = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel19 = new javax.swing.JLabel();
        x_label = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        y_label = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        x_scale = new javax.swing.JComboBox();
        jLabel21 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jCheckBox7 = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Time-To-Target Plot for Latex");

        jLabel1.setText("A1-TTT");

        aaa.setText("A2-TTT");

        sss.setText("A3-TTT");

        ddf.setText("A4-TTT");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        adf.setText("A5-TTT");

        fdff.setText("A6-TTT");

        jLabel2.setText("mark size");

        ms1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1", "1.1", "1.2", "1.3", "1.4", "1.5", "1.6", "1.7", "1.8", "1.9", "2", "2.1", "2.2", "2.3", "2.4", "2.5", "2.6", "2.7", "2.8", "2.9", "3" }));

        jLabel3.setText("mark size");

        jLabel4.setText("mark size");

        jLabel10.setText("mark size");

        jLabel11.setText("mark size");

        jLabel12.setText("mark size");

        ms2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1", "1.1", "1.2", "1.3", "1.4", "1.5", "1.6", "1.7", "1.8", "1.9", "2", "2.1", "2.2", "2.3", "2.4", "2.5", "2.6", "2.7", "2.8", "2.9", "3" }));

        ms3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1", "1.1", "1.2", "1.3", "1.4", "1.5", "1.6", "1.7", "1.8", "1.9", "2", "2.1", "2.2", "2.3", "2.4", "2.5", "2.6", "2.7", "2.8", "2.9", "3" }));

        ms4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1", "1.1", "1.2", "1.3", "1.4", "1.5", "1.6", "1.7", "1.8", "1.9", "2", "2.1", "2.2", "2.3", "2.4", "2.5", "2.6", "2.7", "2.8", "2.9", "3" }));

        ms5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1", "1.1", "1.2", "1.3", "1.4", "1.5", "1.6", "1.7", "1.8", "1.9", "2", "2.1", "2.2", "2.3", "2.4", "2.5", "2.6", "2.7", "2.8", "2.9", "3" }));

        ms6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1", "1.1", "1.2", "1.3", "1.4", "1.5", "1.6", "1.7", "1.8", "1.9", "2", "2.1", "2.2", "2.3", "2.4", "2.5", "2.6", "2.7", "2.8", "2.9", "3" }));

        jLabel13.setText("mark");

        m1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "circle", "square", "triangle", "cross" }));

        jLabel14.setText("mark");

        m2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "circle", "square", "triangle", "cross" }));

        jLabel15.setText("mark");

        m3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "circle", "square", "triangle", "cross" }));

        jLabel16.setText("mark");

        m4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "circle", "square", "triangle", "cross" }));

        jLabel17.setText("mark");

        m5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "circle", "square", "triangle", "cross" }));

        jLabel18.setText("mark");

        m6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "circle", "square", "triangle", "cross" }));

        RunButton.setText("Run");
        RunButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RunButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("plot size");

        SizeX.setText("10");
        SizeX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SizeXActionPerformed(evt);
            }
        });

        jLabel6.setText("x");

        SizeY.setText("10");

        jLabel7.setText("(cm)");

        jLabel8.setText("width");

        jLabel9.setText("height");

        jLabel19.setText("x label");

        x_label.setText("seconds");

        jLabel20.setText("y label");

        y_label.setText("CDF");

        x_scale.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "logarithmic", "lineal" }));

        jLabel21.setText("x scale");

        jCheckBox7.setText("add theoretical distribution");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(SizeX, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6))
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(SizeY, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7))
                            .addComponent(jLabel9)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator6, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(y_label, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(x_label, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator5))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(x_scale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel21))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jCheckBox7)
                .addGap(47, 47, 47))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(SizeX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(SizeY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(x_label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(y_label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(x_scale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox7)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("About");

        jMenuItem1.setText("About");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(RunButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aaa))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sss))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ddf))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(adf))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fdff)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ListA2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ListA1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ListA3, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ListA4, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ms2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel14))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ms1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel13))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(ms3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel15))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(ms4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel16)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(m4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ListA6, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ms6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel18)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ListA5, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ms5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(m5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(34, 34, 34)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)
                                .addComponent(ms1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel13)
                                .addComponent(m1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ListA1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(ms2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel14)
                                .addComponent(m2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(aaa)
                                .addComponent(ListA2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(sss)
                                .addComponent(ListA3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4)
                                .addComponent(ms3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel15)
                                .addComponent(m3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox4)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(ddf)
                                .addComponent(ListA4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10)
                                .addComponent(ms4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel16)
                                .addComponent(m4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(adf)
                            .addComponent(jCheckBox5)
                            .addComponent(ListA5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(ms5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17)
                            .addComponent(m5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(fdff)
                                    .addComponent(ListA6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jCheckBox6))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(ms6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel18)
                                    .addComponent(m6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(RunButton, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SizeXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SizeXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SizeXActionPerformed

    private void RunButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RunButtonActionPerformed
        StringTokenizer st;
        height = Integer.parseInt(SizeX.getText());
        width = Integer.parseInt(SizeY.getText());

        if (x_scale.getSelectedIndex() == 0){
            jCheckBox7.setSelected(false);
        }
        
        jTextArea1.setText("");
        
        //Copy the selected algorithms
        double max_value = 0;
        if(jCheckBox1.isSelected()){
            st = new StringTokenizer(ListA1.getText());
            A1TTT = new Double[st.countTokens()];
            for(int i=0;i<A1TTT.length;i++){
                A1TTT[i] = Double.parseDouble(st.nextToken());
            }
            A1TTT = Order(A1TTT);
            N1 = A1TTT.length;
            if(A1TTT[A1TTT.length-1] > max_value){
                max_value = A1TTT[A1TTT.length-1];
            }
        }
        if(jCheckBox2.isSelected()){
            st = new StringTokenizer(ListA2.getText());
            A2TTT = new Double[st.countTokens()];
            for(int i=0;i<A2TTT.length;i++){
                A2TTT[i] = Double.parseDouble(st.nextToken());
            }
            A2TTT = Order(A2TTT);
            N2 = A2TTT.length;
            if(A2TTT[A2TTT.length-1] > max_value){
                max_value = A2TTT[A2TTT.length-1];
            }
        }
        if(jCheckBox3.isSelected()){
            st = new StringTokenizer(ListA3.getText());
            A3TTT = new Double[st.countTokens()];
            for(int i=0;i<A3TTT.length;i++){
                A3TTT[i] = Double.parseDouble(st.nextToken());
            }
            A3TTT = Order(A3TTT);
            N3 = A3TTT.length;
            if(A3TTT[A3TTT.length-1] > max_value){
                max_value = A3TTT[A3TTT.length-1];
            }
        }
        if(jCheckBox4.isSelected()){
            st = new StringTokenizer(ListA4.getText());
            A4TTT = new Double[st.countTokens()];
            for(int i=0;i<A4TTT.length;i++){
                A4TTT[i] = Double.parseDouble(st.nextToken());
            }
            A4TTT = Order(A4TTT);
            N4 = A4TTT.length;
            if(A4TTT[A4TTT.length-1] > max_value){
                max_value = A4TTT[A4TTT.length-1];
            }
        }
        if(jCheckBox5.isSelected()){
            st = new StringTokenizer(ListA5.getText());
            A5TTT = new Double[st.countTokens()];
            for(int i=0;i<A5TTT.length;i++){
                A5TTT[i] = Double.parseDouble(st.nextToken());
            }
            A5TTT = Order(A5TTT);
            N5 = A5TTT.length;
            if(A5TTT[A5TTT.length-1] > max_value){
                max_value = A5TTT[A5TTT.length-1];
            }
        }
        if(jCheckBox6.isSelected()){
            st = new StringTokenizer(ListA6.getText());
            A6TTT = new Double[st.countTokens()];
            for(int i=0;i<A6TTT.length;i++){
                A6TTT[i] = Double.parseDouble(st.nextToken());
            }
            A6TTT = Order(A6TTT);
            N6 = A6TTT.length;
            if(A6TTT[A6TTT.length-1] > max_value){
                max_value = A6TTT[A6TTT.length-1];
            }
        }

        //Min and max values of the axis
        ymin = 0;
        ymax = 1;
        xmin = 0;
        xmax = max_value;

        jTextArea1.append("\\begin{tikzpicture}[],\n" +
            "\\centering\n" +
            "\\begin{axis}[\n" +
            "height="+height+"cm,\n" +
            "width="+width+"cm,  \n" +
            "  ymax="+ymax+",\n" +
            "  ymin="+ymin+",\n" +
            "  xmin="+xmin+",\n" +
            "  xmax="+xmax+",\n");
        if("logarithmic".equals(x_scale.getSelectedItem().toString())){
            jTextArea1.append("  xmode=log,\n" +
                "  axis y line*=left,\n" +
                "  xlabel = " + x_label.getText() + ",\n" +
                "  ylabel = " + y_label.getText() + "\n" +
                "  ]\n");
        }
        else{
            jTextArea1.append("  axis y line*=left,\n" +
                "  xlabel = " + x_label.getText() + ",\n" +
                "  ylabel = " + y_label.getText() + "\n" +
                "  ]\n");            
        }
        //"  xticklabels={");
        //for(int i=0; i<LX.length-1;i++){
            //    jTextArea1.append(LX[i]+",");
            //}
        //jTextArea1.append(LX[LX.length-1]+"},\n" +
            //        "xtick={1,...,"+LX.length+"}]\n"+
            //        "\\addplot+[only marks][error bars/.cd,y dir=both, y explicit]\n" +
            //        "coordinates {");

        if(jCheckBox1.isSelected()){
            String mark = m1.getSelectedItem().toString();
            switch(mark){
                case "circle": mark = "o";
                    break;
                case "triangle": mark = "triangle";
                    break;
                case "square": mark = "square";
                    break;
                case "cross": mark = "x";
            }
            jTextArea1.append("\\addplot+[only marks, red, mark size = " + ms1.getSelectedItem().toString() + ", mark = "+ mark +"][error bars/.cd,y dir=both, y explicit]\n coordinates {");
            for(int i=0;i<A1TTT.length;i++){
                jTextArea1.append("(" + A1TTT[i] + "," + ((i+1)-(0.5))/N1 + ") +- (0,0) \n");
            }
            jTextArea1.append("};");
            
            if(jCheckBox7.isSelected()){
                int n = A1TTT.length;
                int l = n / 4 - 1;
                int u = 3 * n / 4 - 1;
                double zu = A1TTT[u];
                double zl = A1TTT[l];
                double qu = -Math.log(1 - ((u+1)-(0.5))/N1);
                double ql = -Math.log(1 - ((l+1)-(0.5))/N1);
                double lambda = (zu - zl) / (qu - ql);
                double miu = zl - lambda * ql;
                jTextArea1.append("\\addplot[smooth, red, domain=0:" + xmax + "] {1-exp(-(x-(" + miu + "))/" + lambda + ")};");
            }
            
        }
        if(jCheckBox2.isSelected()){
            String mark = m2.getSelectedItem().toString();
            switch(mark){
                case "circle": mark = "o";
                    break;
                case "triangle": mark = "triangle";
                    break;
                case "square": mark = "square";
                    break;
                case "cross": mark = "x";
            }            
            jTextArea1.append("\\addplot+[only marks, blue, mark size = "+ ms2.getSelectedItem().toString() +", mark = "+ mark +"][error bars/.cd,y dir=both, y explicit]\n coordinates {");
            for(int i=0;i<A2TTT.length;i++){
                jTextArea1.append("(" + A2TTT[i] + "," + ((i+1)-(0.5))/N2 + ") +- (0,0) \n");
            }
            jTextArea1.append("};");
            if(jCheckBox7.isSelected()){
                int n = A2TTT.length;
                int l = n / 4 - 1;
                int u = 3 * n / 4 - 1;
                double zu = A2TTT[u];
                double zl = A2TTT[l];
                double qu = -Math.log(1 - ((u+1)-(0.5))/N2);
                double ql = -Math.log(1 - ((l+1)-(0.5))/N2);
                double lambda = (zu - zl) / (qu - ql);
                double miu = zl - lambda * ql;
                jTextArea1.append("\\addplot[smooth, blue, domain=0:" + xmax + "] {1-exp(-(x-(" + miu + "))/" + lambda + ")};");
            }            
        }
        if(jCheckBox3.isSelected()){
            String mark = m3.getSelectedItem().toString();
            switch(mark){
                case "circle": mark = "o";
                    break;
                case "triangle": mark = "triangle";
                    break;
                case "square": mark = "square";
                    break;
                case "cross": mark = "x";
            }            
            jTextArea1.append("\\addplot+[only marks, green, mark size = " + ms3.getSelectedItem().toString() +", mark = "+ mark +"][error bars/.cd,y dir=both, y explicit]\n coordinates {");
            for(int i=0;i<A3TTT.length;i++){
                jTextArea1.append("(" + A3TTT[i] + "," + ((i+1)-(0.5))/N3 + ") +- (0,0) \n");
            }
            jTextArea1.append("};");
            if(jCheckBox7.isSelected()){
                int n = A3TTT.length;
                int l = n / 4 - 1;
                int u = 3 * n / 4 - 1;
                double zu = A3TTT[u];
                double zl = A3TTT[l];
                double qu = -Math.log(1 - ((u+1)-(0.5))/N3);
                double ql = -Math.log(1 - ((l+1)-(0.5))/N3);
                double lambda = (zu - zl) / (qu - ql);
                double miu = zl - lambda * ql;
                jTextArea1.append("\\addplot[smooth, green, domain=0:" + xmax + "] {1-exp(-(x-(" + miu + "))/" + lambda + ")};");
            }            
        }
        if(jCheckBox4.isSelected()){
            String mark = m4.getSelectedItem().toString();
            switch(mark){
                case "circle": mark = "o";
                    break;
                case "triangle": mark = "triangle";
                    break;
                case "square": mark = "square";
                    break;
                case "cross": mark = "x";
            }            
            jTextArea1.append("\\addplot+[only marks, brown, mark size = " + ms4.getSelectedItem().toString() +", mark = "+ mark +"][error bars/.cd,y dir=both, y explicit]\n coordinates {");
            for(int i=0;i<A4TTT.length;i++){
                jTextArea1.append("(" + A4TTT[i] + "," + ((i+1)-(0.5))/N4 + ") +- (0,0) \n");
            }
            jTextArea1.append("};");
            if(jCheckBox7.isSelected()){
                int n = A4TTT.length;
                int l = n / 4 - 1;
                int u = 3 * n / 4 - 1;
                double zu = A4TTT[u];
                double zl = A4TTT[l];
                double qu = -Math.log(1 - ((u+1)-(0.5))/N4);
                double ql = -Math.log(1 - ((l+1)-(0.5))/N4);
                double lambda = (zu - zl) / (qu - ql);
                double miu = zl - lambda * ql;
                jTextArea1.append("\\addplot[smooth, brown, domain=0:" + xmax + "] {1-exp(-(x-(" + miu + "))/" + lambda + ")};");
            }            
        }
        if(jCheckBox5.isSelected()){
            String mark = m5.getSelectedItem().toString();
            switch(mark){
                case "circle": mark = "o";
                    break;
                case "triangle": mark = "triangle";
                    break;
                case "square": mark = "square";
                    break;
                case "cross": mark = "x";
            }            
            jTextArea1.append("\\addplot+[only marks, mark size = " + ms5.getSelectedItem().toString() +", mark = "+ mark +"][error bars/.cd,y dir=both, y explicit]\n coordinates {");
            for(int i=0;i<A5TTT.length;i++){
                jTextArea1.append("(" + A5TTT[i] + "," + ((i+1)-(0.5))/N5 + ") +- (0,0) \n");
            }
            jTextArea1.append("};");
            if(jCheckBox7.isSelected()){
                int n = A5TTT.length;
                int l = n / 4 - 1;
                int u = 3 * n / 4 - 1;
                double zu = A5TTT[u];
                double zl = A5TTT[l];
                double qu = -Math.log(1 - ((u+1)-(0.5))/N5);
                double ql = -Math.log(1 - ((l+1)-(0.5))/N5);
                double lambda = (zu - zl) / (qu - ql);
                double miu = zl - lambda * ql;
                jTextArea1.append("\\addplot[smooth,domain=0:" + xmax + "] {1-exp(-(x-(" + miu + "))/" + lambda + ")};");
            }            
        }
        if(jCheckBox6.isSelected()){
            String mark = m6.getSelectedItem().toString();
            switch(mark){
                case "circle": mark = "o";
                    break;
                case "triangle": mark = "triangle";
                    break;
                case "square": mark = "square";
                    break;
                case "cross": mark = "x";
            }            
            jTextArea1.append("\\addplot+[only marks, mark size = "+ ms6.getSelectedItem().toString() +", mark = "+ mark +"][error bars/.cd,y dir=both, y explicit]\n coordinates {");
            for(int i=0;i<A6TTT.length;i++){
                jTextArea1.append("(" + A6TTT[i] + "," + ((i+1)-(0.5))/N6 + ") +- (0,0) \n");
            }
            jTextArea1.append("};");
            if(jCheckBox7.isSelected()){
                int n = A6TTT.length;
                int l = n / 4 - 1;
                int u = 3 * n / 4 - 1;
                double zu = A6TTT[u];
                double zl = A6TTT[l];
                double qu = -Math.log(1 - ((u+1)-(0.5))/N6);
                double ql = -Math.log(1 - ((l+1)-(0.5))/N6);
                double lambda = (zu - zl) / (qu - ql);
                double miu = zl - lambda * ql;
                jTextArea1.append("\\addplot[smooth,domain=0:" + xmax + "] {1-exp(-(x-(" + miu + "))/" + lambda + ")};");
            }            
        }

        jTextArea1.append("\\end{axis}\n" +
            "\\end{tikzpicture}\n");
    }//GEN-LAST:event_RunButtonActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:        
        //new JPopupMenu().show(new JFrame(), 20, 20);
        Frame frame = new Frame();
        JOptionPane.showMessageDialog(frame,"TTT-Latex \n Developed by Jesús García Díaz \n under Apache License 2.0");
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ListA1;
    private javax.swing.JTextField ListA2;
    private javax.swing.JTextField ListA3;
    private javax.swing.JTextField ListA4;
    private javax.swing.JTextField ListA5;
    private javax.swing.JTextField ListA6;
    private javax.swing.JButton RunButton;
    private javax.swing.JTextField SizeX;
    private javax.swing.JTextField SizeY;
    private javax.swing.JLabel aaa;
    private javax.swing.JLabel adf;
    private javax.swing.JLabel ddf;
    private javax.swing.JLabel fdff;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JComboBox m1;
    private javax.swing.JComboBox m2;
    private javax.swing.JComboBox m3;
    private javax.swing.JComboBox m4;
    private javax.swing.JComboBox m5;
    private javax.swing.JComboBox m6;
    private javax.swing.JComboBox ms1;
    private javax.swing.JComboBox ms2;
    private javax.swing.JComboBox ms3;
    private javax.swing.JComboBox ms4;
    private javax.swing.JComboBox ms5;
    private javax.swing.JComboBox ms6;
    private javax.swing.JLabel sss;
    private javax.swing.JTextField x_label;
    private javax.swing.JComboBox x_scale;
    private javax.swing.JTextField y_label;
    // End of variables declaration//GEN-END:variables

    private Double[] Order(Double[] A) {
        double temp;
        for(int i=0;i<A.length;i++){
            for(int j=i;j<A.length;j++){
                if(A[j]<A[i]){
                    temp = A[i];
                    A[i] = A[j];
                    A[j] = temp;
                }
            }
        }
        return A;
    }
}
